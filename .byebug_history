c
n
c
      end
        end
          break
        else
          change_aux -= 5
          coins << 5
        when !(change_aux - 5).negative?
          change_aux -= 10
          coins << 10
        when !(change_aux - 10).negative?
          change_aux -= 20
          coins << 20
        when !(change_aux - 20).negative?
          change_aux -= 50
          coins << 50
        when !(change_aux - 50).negative?
          change_aux -= 100
          coins << 100
        when !(change_aux - 100).negative?
        case change_aux
      while change_aux.positive?
      end
        end
          break
        else
          change_aux -= 5
          coins << 5
        when !(change_aux - 5).negative?
          change_aux -= 10
          coins << 10
        when !(change_aux - 10).negative?
          change_aux -= 20
          coins << 20
        when !(change_aux - 20).negative?
          change_aux -= 50
          coins << 50
        when !(change_aux - 50).negative?
          change_aux -= 100
          coins << 100
        when !(change_aux - 100).negative?
        case change_aux
      while change_aux.positive?
coins = []
change_aux = change
change.positive?
change = 10
c
multiple[:value]
multiple
c
multiple
c
multiple[:multiple]
multiple.multiple
multiple
multiple.value
c
self.cost
multiple
